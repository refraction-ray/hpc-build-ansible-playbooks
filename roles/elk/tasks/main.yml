---
# tasks file for elk
- name: install python3 apt for apt repo task
  become: yes
  apt:
    name: python3-apt
    state: present
- name: add elastic apt key
  become: yes
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
- name: add elastic repos for apt
  become: yes
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/6.x/apt stable main"
    state: present
    update_cache: yes
- name: install elastic
  become: yes
  apt:
    name: elasticsearch=6.8.0
    state: present
  when: inventory_hostname in groups['ln']
- name: elastic config
  become: yes
  template:
    src: elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: 0640
  when: inventory_hostname in groups['ln']
  register: esconf
- name: ensure es is started
  become: yes
  service:
    name: elasticsearch
    state: started
    enabled: yes
  when: inventory_hostname in groups['ln']
- name: elasticsearch start
  become: yes
  service:
    name: elasticsearch
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['ln'] and esconf.changed
- name: install kibana
  become: yes
  apt:
    name: kibana=6.8.0
    state: present
  when: inventory_hostname in groups['ln']
- name: configure kibana
  become: yes
  template:
    src: kibana.yml
    dest: /etc/kibana/kibana.yml
    mode: 0600
    owner: kibana
  when: inventory_hostname in groups['ln']
  register: kbconf
- name: ensure kibana is started
  become: yes
  service:
    name: kibana
    state: started
    enabled: yes
  when: inventory_hostname in groups['ln']
- name: service kibana enable and start
  become: yes
  service:
    name: kibana
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['ln'] and kbconf.changed
- name: install nginx
  become: yes
  apt:
    name: nginx
    state: present
  when: inventory_hostname in groups['ln']
- name: delete default nginx page
  become: yes
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: inventory_hostname in groups['ln']
  register: rmdefault
- name: nginx kibana server set
  template:
    src: kibana.conf
    dest: /etc/nginx/sites-enabled/kibana.conf
  become: yes
  when: inventory_hostname in groups['ln']
  register: kibanaserver
- name: ensure nginx is started
  become: yes
  service:
    name: nginx
    state: started
    enabled: yes
  when: inventory_hostname in groups['ln']
- name: restart nginx
  become: yes
  service:
    name: nginx
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['ln'] and (rmdefault.changed or kibanaserver.changed)
- name: install logstash
  become: yes
  apt:
    name: logstash=1:6.8.0-1
    state: present
  when: inventory_hostname in groups['ln']
- name: config logstash
  template:
    src: "{{ item }}"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: logstash
    mode: 0600
  become: yes
  when: inventory_hostname in groups['ln']
  register: logstashconf
  with_items:
    - "02-beats-input.conf"
    - "30-elasticsearch-output.conf"
- name: ensure logstash is started
  service:
    name: logstash
    state: started
  when: inventory_hostname in groups['ln']
  become: yes
- name: restart logstash service
  become: yes
  service:
    name: logstash
    state: restarted
    enabled: yes
  when: inventory_hostname in groups['ln'] and logstashconf.changed
- name: install filebeat
  become: yes
  apt: 
    name: filebeat=6.8.0
    state: present
- name: config filebeat
  become: yes
  template:
    src: filebeat.yml
    dest: /etc/filebeat/filebeat.yml
    owner: root
    mode: 0600
  register: filebeatconf
- name: filebeat modules file
  become: yes
  copy:
    src: "{{ item }}"
    dest: "/etc/filebeat/modules.d/{{ item }}"
  with_items:
    - nginx.yml
    - system.yml
    - apache2.yml
  when: inventory_hostname in groups['ln']
- name: filebeat modules file on cns
  become: yes
  copy:
    src: "{{ item }}"
    dest: "/etc/filebeat/modules.d/{{ item }}"
  with_items:
    - system.yml
  when: inventory_hostname in groups['cn']
- name: ensure fb is started
  become: yes
  service:
    name: filebeat
    state: started
- name: restart filebeat
  become: yes
  service:
    name: filebeat
    state: restarted  
  when:  filebeatconf.changed
## the following tasks is used for initialization of fb
- name: stop filebeat for init
  become: yes
  service:
    name: filebeat
    state: stopped
  when: filebeat_init
- name: hack apache2 error pipelines enabling it supporting timezone convert
  become: yes
  when: inventory_hostname in groups['ln'] and filebeat_init
  copy:
    dest: '/usr/share/filebeat/module/apache2/error/ingest/pipeline.json'
    src: 'apache2_pipeline.json'
- name: delete all exisiting pipelines
  shell: "unset http_proxy&&curl -XDELETE -u {{ es_user }}:{{ es_pass }} 'http://localhost:9200/_ingest/pipeline/filebeat*'"
  when: inventory_hostname in groups['ln'] and filebeat_init
- name: enable filebeat module in login node
  become: yes
  command: "filebeat modules enable {{item}}"
  with_items:
     "{{ filebeat_ln_modules }}"
  when: inventory_hostname in groups['ln'] and filebeat_init
  register: r
  changed_when: r.stdout.startswith("Enable")
- name: enable filebeat module in compute nodes
  become: yes
  command: "filebeat modules enable {{item}}"
  with_items:
     "{{ filebeat_cn_modules }}"
  when: inventory_hostname in groups['cn'] and filebeat_init
  register: rcn
  changed_when: rcn.stdout.startswith("Enable") 
- name: filebeat setup init
  become: yes
  command: "filebeat setup -e -E output.logstash.enabled=false -E output.elasticsearch.hosts=['localhost:9200'] -E output.elasticsearch.username={{ es_user }} -E output.elasticsearch.password={{ es_pass }}"
  when: inventory_hostname in groups['ln'] and filebeat_init
- name: filebeat add pipelines into ES
  become: yes
  command: "filebeat setup --pipelines --modules {{ filebeat_ln_modules|join(',') }}  -E output.logstash.enabled=false -E output.elasticsearch.hosts=['localhost:9200'] -E output.elasticsearch.username={{ es_user }} -E output.elasticsearch.password={{ es_pass }} -M system.auth.var.convert_timezone=true -M system.syslog.var.convert_timezone=true -M nginx.error.var.convert_timezone=true -M apache2.error.var.convert_timezone=true"
  when: inventory_hostname in groups['ln'] and filebeat_init
- name: start filebeat again
  become: yes
  service:
    name: filebeat
    state: started
  when: filebeat_init
